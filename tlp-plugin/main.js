/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var d=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var f=(r,s)=>{for(var i in s)d(r,i,{get:s[i],enumerable:!0})},T=(r,s,i,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let e of m(s))!v.call(r,e)&&e!==i&&d(r,e,{get:()=>s[e],enumerable:!(t=u(s,e))||t.enumerable});return r};var w=r=>T(d({},"__esModule",{value:!0}),r);var L={};f(L,{default:()=>p});module.exports=w(L);var l=require("obsidian"),h={levels:[{level:"red",name:"TLP:RED",color:"#ff2a2a"},{level:"amber",name:"TLP:AMBER",color:"#ffbf00"},{level:"amber+strict",name:"TLP:AMBER+STRICT",color:"#ffbf00"},{level:"yellow",name:"TLP:YELLOW",color:"#ffbf00"},{level:"green",name:"TLP:GREEN",color:"#2aff2a"},{level:"white",name:"TLP:WHITE",color:"#ffffff"},{level:"clear",name:"TLP:CLEAR",color:"#ffffff"}]},p=class extends l.Plugin{async onload(){await this.loadSettings(),this.initializeTlpIndicators(),this.initializeTlpBanner(),this.addStatusBarItem().setText("Status Bar Text"),this.addCommand({id:"open-sample-modal-simple",name:"Open sample modal (simple)",callback:()=>{new c(this.app).open()}}),this.addCommand({id:"sample-editor-command",name:"Sample editor command",editorCallback:(t,e)=>{console.log(t.getSelection()),t.replaceSelection("Sample Editor Command")}}),this.addCommand({id:"open-sample-modal-complex",name:"Open sample modal (complex)",checkCallback:t=>{if(this.app.workspace.getActiveViewOfType(l.MarkdownView))return t||new c(this.app).open(),!0}}),this.addSettingTab(new g(this.app,this)),this.registerDomEvent(document,"click",t=>{console.log("click",t)}),this.registerInterval(window.setInterval(()=>console.log("setInterval"),5*60*1e3))}onunload(){}async loadSettings(){this.settings=Object.assign({},h,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}normalizeLevel(i){return i.trim().replace(/^TLP:/i,"")}getLevelConfig(i){let t=this.normalizeLevel(i);return this.settings.levels.find(e=>e.level.toLowerCase()===t.toLowerCase())}getRawTlp(i){var a;let t=this.app.metadataCache.getFileCache(i),e=t==null?void 0:t.frontmatter,n=(a=e==null?void 0:e.tlp)!=null?a:e==null?void 0:e.TLP;return n!=null?n:null}getTlpColor(i){var a;let t=this.app.metadataCache.getFileCache(i),e=t==null?void 0:t.frontmatter,n=(a=e==null?void 0:e.tlp)!=null?a:e==null?void 0:e.TLP;if(n){let o=this.getLevelConfig(n);if(o)return o.color}return null}updateFileIndicator(i){let t=document.querySelectorAll(".nav-file-title-content");t.length||(t=document.querySelectorAll(".nav-file-title")),t.forEach(e=>{if(e.getAttribute("data-path")===i.path){let n=e.querySelector(".tlp-indicator");n||(n=document.createElement("span"),n.classList.add("tlp-indicator"),e.prepend(n));let a=this.getTlpColor(i);a?(n.style.backgroundColor=a,n.style.display="inline-block"):n.style.display="none"}})}updateAllFileIndicators(){this.app.vault.getMarkdownFiles().forEach(i=>this.updateFileIndicator(i))}initializeTlpIndicators(){this.app.workspace.onLayoutReady(()=>this.updateAllFileIndicators()),this.registerEvent(this.app.metadataCache.on("changed",i=>{i instanceof l.TFile&&this.updateFileIndicator(i)})),this.registerEvent(this.app.vault.on("rename",i=>{i instanceof l.TFile&&this.updateFileIndicator(i)}))}getTlpLevelName(i){var o;let t=this.app.metadataCache.getFileCache(i),e=t==null?void 0:t.frontmatter,n=(o=e==null?void 0:e.tlp)!=null?o:e==null?void 0:e.TLP;if(!n)return null;let a=this.getLevelConfig(n);return a?a.name:n.toUpperCase()}updateBanner(i){let t=this.app.workspace.getActiveViewOfType(l.MarkdownView);if(!t)return;let e=t.contentEl.querySelector(".tlp-banner");if(e||(e=document.createElement("div"),e.classList.add("tlp-banner"),t.contentEl.prepend(e)),!i){e.style.display="none",e.classList.remove("show");return}let n=this.getTlpColor(i),a=this.getTlpLevelName(i),o=this.getRawTlp(i);n&&a&&o?(e.textContent=a,e.setAttribute("data-tlp",o),e.style.backgroundColor=n,e.style.display="block",e.classList.remove("show"),e.offsetWidth,e.classList.add("show")):(e.style.display="none",e.classList.remove("show"))}initializeTlpBanner(){this.app.workspace.onLayoutReady(()=>{this.updateBanner(this.app.workspace.getActiveFile())}),this.registerEvent(this.app.workspace.on("file-open",i=>this.updateBanner(i))),this.registerEvent(this.app.metadataCache.on("changed",i=>{let t=this.app.workspace.getActiveFile();t&&i.path===t.path&&this.updateBanner(i)}))}},c=class extends l.Modal{constructor(s){super(s)}onOpen(){let{contentEl:s}=this;s.setText("Woah!")}onClose(){let{contentEl:s}=this;s.empty()}},g=class extends l.PluginSettingTab{constructor(i,t){super(i,t);this.plugin=t}display(){let{containerEl:i}=this;i.empty(),i.createEl("h2",{text:"TLP Levels"}),this.plugin.settings.levels.forEach((t,e)=>{let n=new l.Setting(i);n.addText(a=>a.setPlaceholder("Level").setValue(t.level).onChange(async o=>{t.level=o,await this.plugin.saveSettings(),this.plugin.updateAllFileIndicators(),this.plugin.updateBanner(this.app.workspace.getActiveFile())})),n.addText(a=>a.setPlaceholder("Display Name").setValue(t.name).onChange(async o=>{t.name=o,await this.plugin.saveSettings(),this.plugin.updateBanner(this.app.workspace.getActiveFile())})),n.addColorPicker(a=>a.setValue(t.color).onChange(async o=>{t.color=o,await this.plugin.saveSettings(),this.plugin.updateAllFileIndicators(),this.plugin.updateBanner(this.app.workspace.getActiveFile())})),n.addExtraButton(a=>a.setIcon("cross").setTooltip("Delete").onClick(async()=>{this.plugin.settings.levels.splice(e,1),await this.plugin.saveSettings(),this.display(),this.plugin.updateAllFileIndicators(),this.plugin.updateBanner(this.app.workspace.getActiveFile())}))}),new l.Setting(i).addButton(t=>t.setButtonText("Add Level").onClick(()=>{this.plugin.settings.levels.push({level:"",name:"",color:"#ffffff"}),this.display()})),new l.Setting(i).addButton(t=>t.setButtonText("Reset to Defaults").setWarning().onClick(async()=>{this.plugin.settings=JSON.parse(JSON.stringify(h)),await this.plugin.saveSettings(),this.display(),this.plugin.updateAllFileIndicators(),this.plugin.updateBanner(this.app.workspace.getActiveFile())}))}};
